/*
 * Device Tree for u-blox ELIN-W160-EVK evaluation kit
 *
 * Copyright (C) 2014 Johan Hovold <johan@hovoldconsulting.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;

#include <dt-bindings/input/input.h>
#include "am335x-elin-w160.dtsi"

/ {
	model = "AM335x u-blox ELIN-W160-EVK";
	compatible = "u-blox,elin-w160-evk", "u-blox,elin-w160", "ti,am33xx";

	gpio-keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;

		pinctrl-names = "default";
		pinctrl-0 = <&gpio_keys_pins>;

		button@0 {
			label = "sw4";
			linux,code = <KEY_4>;
			gpios = <&gpio2 7 GPIO_ACTIVE_LOW>;
		};

		button@1 {
			label = "sw5";
			linux,code = <KEY_5>;
			gpios = <&gpio2 6 GPIO_ACTIVE_LOW>;
		};

		button@2 {
			label = "sw6";
			linux,code = <KEY_6>;
			gpios = <&gpio2 10 GPIO_ACTIVE_LOW>;
		};

		/*
		 * NOTE: The SW3 gpio is currently used as eth_phy0_reset.
		 */
	};

	gpio-leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&gpio_leds_pins>;

		led@0 {
			label = "elin-w160-evk:yellow:";
			gpios = <&gpio2 9 GPIO_ACTIVE_LOW>;
		};

		led@1 {
			label = "elin-w160-evk:green:";
			gpios = <&gpio2 11 GPIO_ACTIVE_LOW>;
		};

		led@2 {
			label = "elin-w160-evk:blue:";
			gpios = <&gpio2 8 GPIO_ACTIVE_LOW>;
		};

		led@3 {
			label = "elin-w160-evk:red:";
			gpios = <&gpio3 4 GPIO_ACTIVE_LOW>;
		};
	};

	vcc_3v3_reg: regulator-vcc-3v3 {
		compatible = "regulator-fixed";
		regulator-name = "vcc_3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};
};

&am33xx_pinmux {
	pinctrl-names = "default";
	pinctrl-0 = <
		&bluetooth_pins
		&clkout2_pins
		&gpio_unused_pins
		&wlan_pins
	>;

	eth_phy0_pins: pinmux_eth_phy0_pins {
		pinctrl-single,pins = <
			0x130 (PIN_INPUT_PULLUP | MUX_MODE7)	/* mii1_rx_clk.gpio3_10 */
			0x1a8 (PIN_OUTPUT | MUX_MODE7)		/* mcasp0_axr1.gpio3_20 */
		>;
	};

	eth_phy1_pins: pinmux_eth_phy1_pins {
		pinctrl-single,pins = <
			0x134 (PIN_INPUT_PULLUP | MUX_MODE7)	/* mii1_rxd3.gpio2_18 */
			0x1a4 (PIN_OUTPUT | MUX_MODE7)		/* mcasp0_fsr.gpio3_19 */
		>;
	};

	gpio_unused_pins: pinmux_gpio_unused_pins {
		pinctrl-single,pins = <
			0x78 (PIN_INPUT | MUX_MODE7)		/* gpmc_be1n.gpio1_28 (GPIO.IO15) */
			0xd0 (PIN_INPUT | MUX_MODE7)		/* lcd_data12.gpio0_8 (GPIO.IO3) */
			0xd4 (PIN_INPUT | MUX_MODE7)		/* lcd_data13.gpio0_9 (GPIO.IO2) */
			0x11c (PIN_INPUT | MUX_MODE7)		/* mii1_txd3.gpio0_16 (GPIO.IO8) */
			0x12c (PIN_INPUT | MUX_MODE7)		/* mii1_tx_clk.gpio3_9 (GPIO.IO11) */
			0x1a0 (PIN_INPUT | MUX_MODE7)		/* mcasp0_acklr.gpio3_18 (GPIO.IO14) */
		>;
	};

	gpio_keys_pins: pinmux_gpio_keys_pins {
		pinctrl-single,pins = <
			0xa0 (PIN_INPUT | MUX_MODE7)		/* lcd_data0.gpio2_6 */
			0xa4 (PIN_INPUT | MUX_MODE7)		/* lcd_data1.gpio2_7 */
			0xb0 (PIN_INPUT | MUX_MODE7)		/* lcd_data4.gpio2_10 */
		>;
	};

	gpio_leds_pins: pinmux_gpio_leds_pins {
		pinctrl-single,pins = <
			0xa8 (PIN_OUTPUT | MUX_MODE7)		/* lcd_data2.gpio2_8 */
			0xac (PIN_OUTPUT | MUX_MODE7)		/* lcd_data3.gpio2_9 */
			0xb4 (PIN_OUTPUT | MUX_MODE7)		/* lcd_data5.gpio2_11 */
			0x118 (PIN_OUTPUT | MUX_MODE7)		/* mii1_rx_dv.gpio3_4 */
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			0x158 (PIN_INPUT_PULLUP | MUX_MODE2)	/* spi0_d1.i2c1_sda */
			0x15c (PIN_INPUT_PULLUP | MUX_MODE2)	/* spi0_cs0.i2c1_scl */
		>;
	};

	i2c2_pins: pinmux_i2c2_pins {
		pinctrl-single,pins = <
			0x150 (PIN_INPUT_PULLUP | MUX_MODE2)	/* spi0_sclk.i2c2_sda */
			0x154 (PIN_INPUT_PULLUP | MUX_MODE2)	/* spi0_d0.i2c2_scl */
		>;
	};

	mmc2_cd_pins: pinmux_mmc2_cd_pins {
		pinctrl-single,pins = <
			0x120 (PIN_INPUT_PULLUP | MUX_MODE7)	/* mii1_txd2.gpio0_17 */
		>;
	};

	spi1_pins: pinmux_spi1_pins {
		pinctrl-single,pins = <
			0x190 (PIN_INPUT | MUX_MODE3)		/* mcasp0_aclkx.spi1_sclk */
			0x194 (PIN_OUTPUT | MUX_MODE3)		/* mcasp0_fsx.spi1_d0 */
			0x198 (PIN_INPUT | MUX_MODE3)		/* mcasp0_axr0.spi1_d1 */
			0x19c (PIN_OUTPUT| MUX_MODE3)		/* mcasp0_ahclkr.spi1_cs0 */
		>;
	};

	uart0_rts_cts_pins: pinmux_uart0_rts_cts_pins {
		pinctrl-single,pins = <
			0x168 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_ctsn.uart0_ctsn */
			0x16c (PIN_OUTPUT | MUX_MODE0)		/* uart0_rtsn.uart0_rtsn */
		>;
	};

	uart0_tx_rx_pins: pinmux_uart0_tx_rx_pins {
		pinctrl-single,pins = <
			0x170 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
			0x174 (PIN_OUTPUT | MUX_MODE0)		/* uart0_txd.uart0_txd */
		>;
	};

	uart1_pins: pinmux_uart1_pins {
		pinctrl-single,pins = <
			0x178 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart1_ctsn.uart1_ctsn */
			0x17c (PIN_OUTPUT | MUX_MODE0)		/* uart1_rtsn.uart1_rtsn */
			0x180 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart1_rxd.uart1_rxd */
			0x184 (PIN_OUTPUT | MUX_MODE0)		/* uart1_txd.uart1_txd */
		>;
	};

	uart3_pins: pinmux_uart3_pins {
		pinctrl-single,pins = <
			0xc8 (PIN_INPUT_PULLUP | MUX_MODE6)	/* lcd_data10.uart3_ctsn */
			0xcc (PIN_OUTPUT | MUX_MODE6)		/* lcd_data11.uart3_rtsn */
			0x160 (PIN_INPUT_PULLUP | MUX_MODE1)	/* spi0_cs1.uart3_rxd */
			0x164 (PIN_OUTPUT | MUX_MODE1)		/* ecap0_in_pwm0_out.uart3_txd */
		>;
	};
};

/*
 * NOTE: Interfaces only available on pin headers are disabled by default.
 */

&i2c0 {
	/* Used internally on ELIN-W160 -- do not disable. */
	status = "okay";
};

&i2c1 {
	clock-frequency = <400000>;

	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	status = "disabled";
};

&i2c2 {
	clock-frequency = <400000>;

	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins>;
	status = "disabled";
};

&mac {
	dual_emac = <1>;

	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_port1_pins &cpsw_port2_pins>;
	pinctrl-1 = <&cpsw_port1_pins_sleep &cpsw_port2_pins_sleep>;
	status = "okay";
};

&davinci_mdio {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mdio_pins>;
	pinctrl-1 = <&mdio_pins_sleep>;
	status = "okay";

	ethernet-phy@0 {
		compatible = "ethernet-phy-id0022.1560", "ethernet-phy-ieee802.3-c22";
		reg = <0>;

		interrupt-parent = <&gpio2>;
		interrupts = <18 8>;

		pinctrl-names = "default";
		pinctrl-0 = <&eth_phy1_pins>;
	};

	ethernet-phy@3 {
		compatible = "ethernet-phy-id0022.1560", "ethernet-phy-ieee802.3-c22";
		reg = <3>;

		interrupt-parent = <&gpio3>;
		interrupts = <10 8>;

		pinctrl-names = "default";
		pinctrl-0 = <&eth_phy0_pins>;
	};
};

&cpsw_emac0 {
	phy_id = <&davinci_mdio>, <3>;
	phy-mode = "rmii";
	dual_emac_res_vlan = <1>;
};

&cpsw_emac1 {
	phy_id = <&davinci_mdio>, <0>;
	phy-mode = "rmii";
	dual_emac_res_vlan = <2>;
};

&phy_sel {
	rmii-clock-ext;
};

&mmc2 {
	cd-gpios = <&gpio0 17 GPIO_ACTIVE_HIGH>;
	bus-width = <4>;

	vmmc-supply = <&vcc_3v3_reg>;

	pinctrl-names = "default";
	pinctrl-0 = <&mmc2_clk_cmd_dat0_pins &mmc2_dat1_3_pins &mmc2_cd_pins>;
	status = "okay";
};

&spi1 {
	ti,pindir-d0-out-d1-in;

	pinctrl-names = "default";
	pinctrl-0 = <&spi1_pins>;
	status = "disabled";
};

&tscadc {
	status = "okay";

	adc {
		ti,adc-channels	= <0 1 2 3 4 5 6 7>;
	};
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_tx_rx_pins &uart0_rts_cts_pins>;
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart3_pins>;
	status = "disabled";
};

&usb {
	status = "okay";
};

&usb_ctrl_mod {
	status = "okay";
};

&usb0 {
	status = "okay";
};

&usb0_phy {
	status = "okay";
};

&usb1 {
	dr_mode = "host";

	status = "okay";
};

&usb1_phy {
	status = "okay";
};

&cppi41dma {
	status = "okay";
};
